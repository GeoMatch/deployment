# Runs an arbitrary Django management command on an ECS task 

on:
  workflow_call:
    inputs:
      command:
        required: true
        description: >-
          Command to be passed as the CMD to the ECS/Fargate container image.
          Any string will try to be converted to a Docker CMD array.
          An unspaced Docker CMD array will also work. Ex:
          ["python","manage.py","migrate"]
        type: string
      shell-form:
        description: >-
          By default, this action uses the Docker CMD exec form. Set this to
          anything other than 'false' to use the shell-form
        required: false
        type: string
        default: "false"

# TODO create user workflow that masks secret: https://github.com/actions/runner/issues/643

jobs:
  ecs-run:
    name: "ECS Run"
    runs-on: ubuntu-latest
    # Long for reinit pipeline. Consider making it configurable
    timeout-minutes: 300 # 5 hours
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_ECS_RUN_TASK_ROLE_ARN }}
          role-session-name: ECSRunFargateTask
          role-duration-seconds: 3600 # 1 hour
      - name: Get ECS Run Task Config
        uses: GeoMatch/deployment/.github/actions/ssm-get-param@main
        id: config
        with:
          ssm-name: ${{ secrets.AWS_GEOMATCH_ECS_RUN_TASK_CONFIG_SSM_NAME }}
      - name: Run command on ECS
        uses: GeoMatch/deployment/.github/actions/ecs-run-sync@main
        with:
          ecs-run-task-config: ${{ steps.config.outputs.value }}
          command: ${{ inputs.command }}
          shell-form: ${{ inputs.shell-form }}
