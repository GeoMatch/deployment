on:
  workflow_call:
    inputs:
      version:
        required: true
        description: "GeoMatch version tag to build for (i.e. v0.0.1)."
        type: string
      extra_vars:
        required: false
        description: "Extra variables to pass to Terraform. (i.e. --var)"
        type: string
        default: ""
      terraform_directory:
        required: true
        description: "Terraform project directory (i.e. './terraform')"
        type: string

jobs:
  terraform-deploy:
    name: "Terraform Deploy"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ${{ inputs.terraform_directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_TERRAFORM_PLAN_ROLE_ARN }}
          role-session-name: ECSDeployTerraformPlan
          role-duration-seconds: 1000
      - name: Terraform Init
        run: terraform init -backend-config=./prod.backend.auto.tfvars
      - name: Terraform Plan
        run: terraform plan -var="geomatch_version=${{ inputs.version }}" ${{ inputs.extra_vars }} -out prod.plan
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_TERRAFORM_ECS_DEPLOY_ROLE_ARN }}
          role-session-name: ECSDeployTerraformApply
          role-duration-seconds: 1200
      - name: Terraform Apply
        run: terraform apply prod.plan
      - if: ${{ always() }}
        run: rm prod.plan || true
