on:
  workflow_call:
    inputs:
      version:
        required: true
        description: "GeoMatch version tag to build for (i.e. v0.0.1)."
        type: string

env:
  GEOMATCH_VERSION: ${{ inputs.version }}

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    timeout-minutes: 3
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_TERRAFORM_PLAN_ROLE_ARN }}
          role-session-name: ECSDeployTerraformPlan 
          role-duration-seconds: 1000
      - name: Check If Container Is Already Built
        id: check
        run: |
          V=$( \
            aws ecr batch-get-image \
            --repository-name ${{ secrets.AWS_GEOMATCH_ECR_REPO_NAME }} \
            --image-ids=imageTag=${{ inputs.version }} \
            --query 'images[].imageId.imageTag' \
            --output text | tr -d '[:space:]' \
          )
          echo "::set-output name=built::$([[ $V == ${{ inputs.version }} ]] && echo true || echo false)"
  build:
    name: "Build Container"
    needs: [check]
    if: needs.check.outputs.already-built == 'false'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_BUILD_ROLE_ARN }}
          role-session-name: ReleaseBuild
          role-duration-seconds: 1000
      - name: Docker Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        # Creates alias of 'docker build' to 'docker buildx build'
        with:
          install: true
      # TODO: Change back to setup of commit 314fea7adcc6a6bccc41cf86ba98203a3d383d9b
      # once https://github.com/aws/containers-roadmap/issues/876 is resolved.
      - name: Build 'base' stage image
        id: docker_build_base
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          build-args: ${{ env.DOCKER_BUILD_ARGS }}
          push: true
          load: false
          tags: "${{ secrets.AWS_GEOMATCH_ECR_REPO_URL }}:base"
          target: base
          cache-from: |
            "type=registry,ref=${{ secrets.AWS_GEOMATCH_ECR_REPO_URL }}:base"
          cache-to: "type=inline"
      - name: Build 'builder' stage image
        id: docker_build_builder
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          build-args: ${{ env.DOCKER_BUILD_ARGS }}
          push: true
          load: false
          tags: "${{ secrets.AWS_GEOMATCH_ECR_REPO_URL }}:builder"
          target: builder
          cache-from: |
            "type=registry,ref=${{ secrets.AWS_GEOMATCH_ECR_REPO_URL }}:builder"
            "type=registry,ref=${{ secrets.AWS_GEOMATCH_ECR_REPO_URL }}:base"
          cache-to: "type=inline"
      - name: Build 'production' stage image
        id: docker_build_production
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          build-args: ${{ env.DOCKER_BUILD_ARGS }}
          tags: |
            "${{ secrets.AWS_GEOMATCH_ECR_REPO_URL }}:${{ inputs.version }}"
            "${{ secrets.AWS_GEOMATCH_ECR_REPO_URL }}:latest"
          target: production
          push: true
          load: false
          cache-from: |
            "type=registry,ref=${{ secrets.AWS_GEOMATCH_ECR_REPO_URL }}:latest"
            "type=registry,ref=${{ secrets.AWS_GEOMATCH_ECR_REPO_URL }}:builder"
            "type=registry,ref=${{ secrets.AWS_GEOMATCH_ECR_REPO_URL }}:base"
          # Avoid caching so we keep the image slim
